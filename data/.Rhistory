install.packages("janitor")
library(mdsr)
library(ggplot2)
library(mosaic)
library(knitr)
library(tidyverse)
library(dplyr)
# Load additional packages here
knitr::opts_chunk$set(
tidy=FALSE,     # display code as typed
size="small")   # slightly smaller font for code
# different models to predict log deaths
pressure_windspeed <- msummary(lm(log_deaths ~ LF.PressureMB + LF.WindsMPH,
data = hurricane_logdeaths)) ;pressure_windspeed
pressure_ndam <- msummary(lm(log_deaths ~ LF.PressureMB + NDAM2014,
data = hurricane_logdeaths)) ;pressure_ndam
pressure_basedam <- msummary(lm(log_deaths ~ LF.PressureMB + BaseDam2014,
data = hurricane_logdeaths)) ;pressure_basedam
# load in full dataset
setwd("~/Dropbox (Amherst College)/Amherst_2021/6_Spring_2020/STAT225/final_project/data")
full_hurricane_df <- read.csv("hurricNamed.csv")
# remove non numeric and BaseDamage for ggpairs call
hurricane_pairs <- full_hurricane_df %>%
select(-c(X, Name, AffectedStates, firstLF, mf, BaseDamage, Year))
ggpairs(hurricane_pairs)
# predicting deaths by pressure and windspeed with unadjusted death column
msummary(lm(deaths ~ LF.PressureMB + LF.WindsMPH, data = hurricane_pairs))
# try removing death outlier
remove_outlier <- hurricane_pairs %>%
filter(deaths != 1836)
ggpairs(remove_outlier)
library(mdsr)
library(ggplot2)
library(mosaic)
library(knitr)
library(tidyverse)
library(dplyr)
library(GGally)
# Load additional packages here
knitr::opts_chunk$set(
tidy=FALSE,     # display code as typed
size="small")   # slightly smaller font for code
# load in full dataset
setwd("~/Dropbox (Amherst College)/Amherst_2021/6_Spring_2020/STAT225/final_project/data")
full_hurricane_df <- read.csv("hurricNamed.csv")
# remove non numeric and BaseDamage for ggpairs call
hurricane_pairs <- full_hurricane_df %>%
select(-c(X, Name, AffectedStates, firstLF, mf, BaseDamage, Year))
ggpairs(hurricane_pairs)
# try applying a log transformation to deaths
hurricane_logdeaths <- hurricane_pairs %>%
mutate(log_deaths = ifelse(deaths == 0, 0, log(deaths))) %>%
select(-deaths)
# different models to predict log deaths
pressure_windspeed <- msummary(lm(log_deaths ~ LF.PressureMB + LF.WindsMPH,
data = hurricane_logdeaths)) ;pressure_windspeed
pressure_ndam <- msummary(lm(log_deaths ~ LF.PressureMB + NDAM2014,
data = hurricane_logdeaths)) ;pressure_ndam
pressure_basedam <- msummary(lm(log_deaths ~ LF.PressureMB + BaseDam2014,
data = hurricane_logdeaths)) ;pressure_basedam
install.packages("SAAG")
install.packages("DAAG")
library(DAAG)
# load in full dataset
full_hurricane_df <- data("hurricNamed")
glimpse(full_hurricane_df)
# load in full dataset
full_hurricane_df <- hurricNamed
glimpse(full_hurricane_df)
View(full_hurricane_df)
# different models to predict log deaths
pressure_windspeed <- msummary(lm(log_deaths ~ LF.PressureMB + LF.WindsMPH,
data = hurricane_logdeaths)) ;pressure_windspeed
pressure_ndam <- msummary(lm(log_deaths ~ LF.PressureMB + NDAM2014,
data = hurricane_logdeaths)) ;pressure_ndam
pressure_basedam <- msummary(lm(log_deaths ~ LF.PressureMB + BaseDam2014,
data = hurricane_logdeaths)) ;pressure_basedam
rep("test, 4")
rep("test", 4)
drugs <- c(
rep("Placebo", 165),
rep("Chlorpromazine", 152),
rep("Dimenhydrinate", 85),
rep("Pentobarbital (100 mg)", 67),
rep("Pentobarbital (150 mg)", 85)
)
nausea <- c(
rep("Yes", 95), rep("No", 165-95),
rep("Yes", 52), rep("No", 165-52),
rep("Yes", 52), rep("No", 165-52),
rep("Yes", 35), rep("No", 165-35),
rep("Yes", 37), rep("No", 165-37)
)
tibble(drugs, nausea)
nausea
drugs
drugs <- c(
rep("Placebo", 165),
rep("Chlorpromazine", 152),
rep("Dimenhydrinate", 85),
rep("Pentobarbital (100 mg)", 67),
rep("Pentobarbital (150 mg)", 85)
)
nausea <- c(
rep("Nausea", 95), rep("No Nausea", 165-95),
rep("Nausea", 52), rep("No Nausea", 165-52),
rep("Nausea", 52), rep("No Nausea", 165-52),
rep("Nausea", 35), rep("No Nausea", 165-35),
rep("Nausea", 37), rep("No Nausea", 165-37)
)
df <- tibble(drugs, nausea)
df
View(df)
nausea
df <- cbind(drugs, nausea)
df
df <- rbind(drugs, nausea)
drug_treatment <- c( rep("PLC", 165), rep("CLP", 152), rep("DMH", 85), rep("PTB (100mg)", 67), rep("PTB (50mg)", 85)
)
nausea <- c( rep("yes", rep("yes", rep("yes", rep("yes", rep("yes",
95), rep("no", 165-95), 52), rep("no", 152-52), 52), rep("no", 85-52), 35), rep("no", 67-35), 37), rep("no", 85-37)
)
ds <- tibble(drug_treatment, nausea)
?tibble
df <- as.data.frame(drugs, nausea)
df
View(df)
drugs <- c(
rep("Placebo", 165),
rep("Chlorpromazine", 152),
rep("Dimenhydrinate", 85),
rep("Pentobarbital (100 mg)", 67),
rep("Pentobarbital (150 mg)", 85)
)
nausea <- c(
rep("Nausea", 95), rep("No Nausea", 165-95),
rep("Nausea", 52), rep("No Nausea", 165-52),
rep("Nausea", 52), rep("No Nausea", 165-52),
rep("Nausea", 35), rep("No Nausea", 165-35),
rep("Nausea", 37), rep("No Nausea", 165-37)
)
typeof(nausea)
library(mdsr)
library(ggplot2)
library(mosaic)
library(knitr)
library(tidyverse)
library(dplyr)
# Load additional packages here
knitr::opts_chunk$set(
tidy=FALSE,     # display code as typed
size="small")   # slightly smaller font for code
df <- tibble(drugs, nausea)
drugs <- c(
rep("Placebo", 165),
rep("Chlorpromazine", 152),
rep("Dimenhydrinate", 85),
rep("Pentobarbital (100 mg)", 67),
rep("Pentobarbital (150 mg)", 85)
)
nausea <- c(
rep("Nausea", 95), rep("No Nausea", 165-95),
rep("Nausea", 52), rep("No Nausea", 152-52),
rep("Nausea", 52), rep("No Nausea", 85-52),
rep("Nausea", 35), rep("No Nausea", 67-35),
rep("Nausea", 37), rep("No Nausea", 85-37)
)
df <- tibble(drugs, nausea)
df <- as.data.frame(drugs, nausea)
View(df)
df <- tibble(drugs, nausea)
df <- cbind(drugs, nausea)
tallies <- tally(~ drugs + nausea, data=df)
df <- tibble(drugs, nausea)
tallies <- tally(~ drugs + nausea, data=df)
tallies
tallies <- tally(~ drugs + nausea, data=df)
mosaicplot(tallies,
main = "test", color = TRUE)
mosaicplot(tallies, color = TRUE) +
labs(title = "title", x = "x", y = "y")
mosaicplot(tallies, color = TRUE) +
labs(title = "title", x = "x", y = "y")
mosaicplot(tallies, main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea", color = TRUE)
mosaicplot(tallies, main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea", color = TRUE)
mosaicplot(t(tallies), main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea", color = TRUE)
mosaicplot(tallies, main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea", color = TRUE)
tallies
tallies <- tally(~ drugs | nausea, data=df)
tallies
tallies <- tally(~ drugs + nausea, format = "prop", data=df)
tallies
mosaicplot(tallies, main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea", color = TRUE)
mosaicplot(t(tallies), main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea", color = TRUE)
mosaicplot(tallies, main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea", color = TRUE)
mosaicplot(tallies, main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea")
mosaicplot(tallies, main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea", color = TRUE)
tallie
tallies
drugs <- c(
rep("Placebo", 165),
rep("Chlorpromazine", 152),
rep("Dimenhydrinate", 85),
rep("Pent (100 mg)", 67),
rep("Pent (150 mg)", 85)
)
nausea <- c(
rep("Nausea", 95), rep("No Nausea", 165-95),
rep("Nausea", 52), rep("No Nausea", 152-52),
rep("Nausea", 52), rep("No Nausea", 85-52),
rep("Nausea", 35), rep("No Nausea", 67-35),
rep("Nausea", 37), rep("No Nausea", 85-37)
)
df <- tibble(drugs, nausea)
tallies <- tally(~ drugs + nausea, data=df)
mosaicplot(tallies, main = "Incidence of nausea across different drug treatments",
xlab = "Treatment", ylab = "Incidence of Nausea", color = TRUE)
tallies
xchisq.test(tallies, correct=FALSE)
xchisq.test(tallies, correct=FALSE)
tallies
tallies
xchisq.test(tallies, correct=FALSE)
xchisq.test(tallies, correct=FALSE)
